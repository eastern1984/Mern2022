{"ast":null,"code":"var _jsxFileName = \"/home/anatoly/omnitec/client/src/components/ChooseEntity/ChooseEntity.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport { Grid, Typography, Stack, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENTITIES = [{\n  name: 'Entity1'\n}, {\n  name: 'Entity2'\n}, {\n  name: 'Entity3'\n}, {\n  name: 'Entity4'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '16px',\n    margin: 'auto'\n  },\n  entity: {\n    cursor: 'pointer',\n    padding: '16px',\n    '&:hover': {\n      opacity: '0.7'\n    }\n  }\n}));\n\nconst ChooseEntity = () => {\n  _s();\n\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [entities, setEntities] = useState(ENTITIES);\n  useEffect(() => {\n    setLoading(true);\n    fetch('/entities').then(response => response.json).then(result => {\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }, this), !loading && ENTITIES.map(entity => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            className: classes.entity,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: entity.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)\n        }, entity.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChooseEntity, \"BmlnWUfS+u583BWyJe37WV58u5s=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChooseEntity;\nexport default ChooseEntity;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseEntity\");","map":{"version":3,"sources":["/home/anatoly/omnitec/client/src/components/ChooseEntity/ChooseEntity.tsx"],"names":["React","useEffect","useState","makeStyles","Box","Paper","Grid","Typography","Stack","CircularProgress","ENTITIES","name","useStyles","theme","root","padding","margin","entity","cursor","opacity","ChooseEntity","classes","loading","setLoading","entities","setEntities","fetch","then","response","json","result","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,KAA3B,EAAkCC,gBAAlC,QAA0D,eAA1D;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAD,EAAsB;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAAtB,EAA2C;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAA3C,EAAgE;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAAhE,CAAjB;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,MAAM,EAAE;AAFN,GAD+B;AAKrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE,SADJ;AAEJH,IAAAA,OAAO,EAAE,MAFL;AAGJ,eAAW;AACPI,MAAAA,OAAO,EAAE;AADF;AAHP;AAL6B,CAAZ,CAAD,CAA5B;;AAcA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAYQ,QAAZ,CAAxC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,IAAAA,KAAK,CAAC,WAAD,CAAL,CAAmBC,IAAnB,CAAwBC,QAAQ,IAAIA,QAAQ,CAACC,IAA7C,EAAmDF,IAAnD,CAAyDG,MAAD,IAAY;AAChEP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAOA,sBACI,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACP,IAAxB;AAAA,2BAEI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,mBACKQ,OAAO,iBAAI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBADhB,EAEK,CAACA,OAAD,IAAYZ,QAAQ,CAACqB,GAAT,CAAcd,MAAD,iBACtB,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,EAAE,EAAE,CAAtB;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,SAAS,EAAE,CAAlB;AAAqB,YAAA,SAAS,EAAEI,OAAO,CAACJ,MAAxC;AAAA,mCACI,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA,wBAA0BA,MAAM,CAACN;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,WAA8BM,MAAM,CAACN,IAArC;AAAA;AAAA;AAAA;AAAA,gBADS,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA7BD;;GAAMS,Y;UACcR,S;;;KADdQ,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Grid, Typography, Stack, CircularProgress } from '@mui/material';\r\nimport { IEntity } from '../../types/interfaces';\r\n\r\nconst ENTITIES = [{ name: 'Entity1' }, { name: 'Entity2' }, { name: 'Entity3' }, { name: 'Entity4' },];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '16px',\r\n        margin: 'auto'\r\n    },\r\n    entity: {\r\n        cursor: 'pointer',\r\n        padding: '16px',\r\n        '&:hover': {\r\n            opacity: '0.7'\r\n        }\r\n    }\r\n}));\r\n\r\nconst ChooseEntity = () => {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [entities, setEntities] = useState<IEntity[]>(ENTITIES);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetch('/entities').then(response => response.json).then((result) => {\r\n            setLoading(false);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n\r\n            <Stack spacing={2}>\r\n                <Grid container spacing={2}>\r\n                    {loading && <CircularProgress />}\r\n                    {!loading && ENTITIES.map((entity) =>\r\n                        <Grid item xs={6} md={3} key={entity.name}>\r\n                            <Paper elevation={3} className={classes.entity}>\r\n                                <Typography variant=\"h4\">{entity.name}</Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Stack>\r\n        </Box >\r\n    );\r\n};\r\n\r\nexport default ChooseEntity;"]},"metadata":{},"sourceType":"module"}